import matplotlib.pyplot as plt
import pandas as pd
import numpy as np

# Define the data with speedup factors
data = {
    'Multiplication': {
        'Threads': [1, 4, 8, 16, 32, 64],
        'Speedup': [1.77, 1.82, 1.74, 1.45, 0.93, 1.17]
    },
    'Inner Product': {
        'Threads': [1, 4, 8, 16, 32, 64],
        'Speedup': [2.81, 3.07, 2.80, 2.18, 1.40, 0.65]
    },
    'Vector Addition': {
        'Threads': [1, 4, 8, 16, 32, 64],
        'Speedup': [1.73, 1.33, 1.20, 0.95, 1.01, 1.02]
    },
    'Subtraction': {
        'Threads': [1, 4, 8, 16, 32, 64],
        'Speedup': [1.84, 1.32, 1.09, 0.94, 0.99, 1.00]
    }
}

# Set up thread labels and the number of operations
threads = [1, 4, 8, 16, 32, 64]
operations = list(data.keys())

# Create the bar graph for each operation with a clustered bar chart
x = np.arange(len(threads))  # label locations
width = 0.2  # width of the bars

fig, ax = plt.subplots(figsize=(10, 6))

# Plot each operation as a separate bar with a different color
for i, (operation, values) in enumerate(data.items()):
    ax.bar(x + i * width, values['Speedup'], width, label=operation)

# Add a horizontal line for Arkworks at 1x speedup
ax.axhline(y=1, color='black', linestyle='--', label='Arkworks (1x)')

# Add labels and title
ax.set_xlabel('Threads')
ax.set_ylabel('Speedup (AVX-512 relative to Arkworks)')
ax.set_title('Speedup Comparison Across Operations')

# Set x-axis tick labels and locations
ax.set_xticks(x + width)
ax.set_xticklabels(threads)

# Add legend
ax.legend()

# Show the plot
plt.tight_layout()
plt.show()

